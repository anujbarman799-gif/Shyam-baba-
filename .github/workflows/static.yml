# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository
          path: '.'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
<! welcome>
<html lang="Namaste">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>рдкрд╛рдиреАрдкреБрд░реА рдСрдлрд░ ЁЯОЙ</title>
  <link rel="stylesheet" href="style.css">
</head>
<body>
  <main>
    <h1>ЁЯе│ Free Pani Puri Offer</h1>
    <p>рдкрд╣рд▓реЗ 50 рдХрд╕реНрдЯрдорд░реНрд╕ рдХреЛ тВ╣50 рдХреА рдкрд╛рдиреАрдкреБрд░реА рдмрд┐рд▓рдХреБрд▓ FREE!</p>

    <input type="text" id="nameInput" placeholder="рдЕрдкрдирд╛ рдирд╛рдо рд▓рд┐рдЦреЗрдВ">
    <button id="submitBtn">рд░реИрдВрдХ рджреЗрдЦреЛ</button>

    <div id="result"></div>
  </main>

  <script src="script.js"></script>
</body>
</html>
<!DOCTYPE html>
<html lang="hi">
<head>
  <meta charset="UTF-8">
  <title>рдкрд╛рдиреАрдкреБрд░реА рдСрдлрд░ ЁЯОЙ</title>
</head>
<body>
  <h1>ЁЯе│ Free Pani Puri Offer</h1>
  <p>рдкрд╣рд▓реЗ 50 рдХрд╕реНрдЯрдорд░ рдХреЛ тВ╣50 рдХреА рдкрд╛рдиреАрдкреБрд░реА рдмрд┐рд▓реНрдХреБрд▓ FREE!</p>

  <label>рдЕрдкрдирд╛ рдирд╛рдо рд▓рд┐рдЦреЗрдВ:</label>
  <input type="text" id="nameInput">
  <button onclick="addCustomer()">рд░реИрдВрдХ рджреЗрдЦреЛ</button>

  <div id="result" style="margin-top:20px; font-size:18px;"></div>

  <script>
    // Local Storage рдореЗрдВ customers рдХреА list рд░рдЦреЗрдВрдЧреЗ
    let customers = JSON.parse(localStorage.getItem("customers")) || [];

    function addCustomer() {
      let name = document.getElementById("nameInput").value.trim();
      if (!name) {
        alert("рдХреГрдкрдпрд╛ рдирд╛рдо рдбрд╛рд▓реЗрдВ!");
        return;
      }

      // рдЪреЗрдХ рдХрд░реЛ рдирд╛рдо рдкрд╣рд▓реЗ рд╕реЗ рд╣реИ рдпрд╛ рдирд╣реАрдВ
      let index = customers.indexOf(name);
      let rank;

      if (index === -1) {
        customers.push(name);
        localStorage.setItem("customers", JSON.stringify(customers));
        rank = customers.length;
      } else {
        rank = index + 1;
      }

      let msg = `рдирдорд╕реНрддреЗ ${name}, рдЖрдк #${rank} рдЧреНрд░рд╛рд╣рдХ рд╣реЛред`;

      if (rank <= 50) {
        msg += " ЁЯОЙ рдмрдзрд╛рдИ! рдЖрдкрдХреЛ FREE рдкрд╛рдиреАрдкреБрд░реА рдорд┐рд▓реЗрдЧреАред";
      } else {
        msg += " тЭМ рдорд╛рдлрд╝ рдХреАрдЬрд┐рдП, рдСрдлрд░ рд╕рд┐рд░реНрдл рдкрд╣рд▓реЗ 50 рдЧреНрд░рд╛рд╣рдХреЛрдВ рдХреЗ рд▓рд┐рдП рдерд╛ред";
      }
      document.getElementById("result").innerHTML = msg;
    }
  </script>
</body>
</html>
